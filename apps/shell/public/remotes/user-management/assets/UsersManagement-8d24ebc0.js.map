{"version":3,"mappings":"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","names":["require$$0","require$$1","defineStore","useGridStore","getActivePinia","ref","Entity","DataSource","VisualizationType","defineAsyncComponent"],"sources":["../../../../../user-management/node_modules/__mf__virtual/user_mf_2_management__loadShare__pinia__loadShare__.js","../../../../../user-management/src/pages/UsersManagement/componentIds.ts","../../../../../user-management/src/pages/UsersManagement/refreshDependencies.ts","../../../../../user-management/src/pages/UsersManagement/userManagement.store.ts","../../../../../user-management/src/users.ts","../../../../../user-management/src/entities/user.entity.ts","../../../../../user-management/src/pages/UsersManagement/userManagement.entities.ts","../../../../../user-management/src/pages/UsersManagement/components/UsersDataGrid/usersDataGrid.config.ts","../../../../../user-management/src/pages/UsersManagement/components/UsersDataGrid/UsersDataGrid.vue","../../../../../user-management/src/pages/UsersManagement/UsersManagement.vue"],"sourcesContent":["\n    \n    ;() => import(\"__mf__virtual/user_mf_2_management__prebuild__pinia__prebuild__.js\").catch(() => {});\n    // dev uses dynamic import to separate chunks\n    \n    const {loadShare} = require(\"@module-federation/runtime\")\n    const {initPromise} = require(\"__mf__virtual/user_mf_2_management__mf_v__runtimeInit__mf_v__.js\")\n    const res = initPromise.then(_ => loadShare(\"pinia\", {\n    customShareInfo: {shareConfig:{\n      singleton: true,\n      strictVersion: false,\n      requiredVersion: \"^3.0.2\"\n    }}}))\n    const exportModule = await res.then(factory => factory())\n    module.exports = exportModule\n  ","export const USERS_DATA_GRID = \"usersDataGrid\"\r\nexport const USER_ROLES_DATA_GRID = \"userRolesDataGrid\"","// refreshDependencies.ts\r\nimport { USERS_DATA_GRID, USER_ROLES_DATA_GRID } from './componentIds';\r\n\r\nconst refreshDependencies: Record<string, string[]> = {\r\n  [USERS_DATA_GRID]: [USER_ROLES_DATA_GRID],\r\n  [USER_ROLES_DATA_GRID]: [],\r\n};\r\n\r\nexport default refreshDependencies;\r\n","import { defineStore, getActivePinia } from 'pinia';\r\nimport { ref } from 'vue';\r\nimport { USERS_DATA_GRID, USER_ROLES_DATA_GRID } from './componentIds';\r\nimport { useGridStore } from 'shared-components'\r\nimport refreshDependencies from './refreshDependencies';\r\n\r\nexport const useUserManagementStore = defineStore('userManagementStore', () => {\r\n\r\n  const usersDataGridStore = useGridStore(USERS_DATA_GRID)(getActivePinia());\r\n  const userRolesDataGridStore = useGridStore(USER_ROLES_DATA_GRID)(getActivePinia());\r\n\r\n  interface RefreshListener {\r\n    componentId: string;\r\n    callback: () => void;\r\n  }\r\n\r\n  const refreshListeners = ref<RefreshListener[]>([])\r\n\r\n  function onRefresh(componentId, listener: () => void) {\r\n    refreshListeners.value.push({\r\n      componentId: componentId,\r\n      callback: listener\r\n    });\r\n  }\r\n\r\n  // Trigger the event\r\n  function triggerRefresh(componentId: string) {\r\n    let filteredCallbacks: (() => void)[] = [];\r\n    \r\n    filteredCallbacks = refreshListeners.value.filter(rl => refreshDependencies[componentId].includes(rl.componentId)).map(rl => rl.callback);\r\n    // //define dependencies between components\r\n    // switch (componentId) {\r\n    //   case usersDataGridId:\r\n    //     filteredCallbacks = refreshListeners.value.filter(rl => rl.componentId == userRolesDataGridId).map(rl => rl.callback);\r\n    // }\r\n\r\n    filteredCallbacks.forEach(cb => {\r\n      cb();\r\n    });\r\n\r\n  }\r\n\r\n  return {\r\n    onRefresh,\r\n    triggerRefresh,\r\n    usersDataGridStore,\r\n    userRolesDataGridStore\r\n  };\r\n});\r\n\r\nexport default { useUserManagementStore };\r\n","// ===== Module DTOs =====\nexport interface AddRoleToUserCommandParametersDataFields {\n  /** @format int32 */\n  id: number;\n  /** @format int32 */\n  roleId: number;\n}\n\nexport interface AddRoleToUserCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: AddRoleToUserCommandParametersDataFields;\n}\n\nexport interface ESign {\n  username?: string | null;\n  comment?: string | null;\n  /** @format int64 */\n  applicationESignId?: number | null;\n}\n\nexport interface AddRoleToUserCommand {\n  data?: AddRoleToUserCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\nexport interface EditUserCommandParametersDataFields {\n  /** @format int32 */\n  id: number;\n  /** @minLength 1 */\n  username: string;\n  rolesIds?: number[] | null;\n}\n\nexport interface EditUserCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: EditUserCommandParametersDataFields;\n}\n\nexport interface EditUserCommand {\n  data?: EditUserCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\nexport interface GetRolesOfUserQueryDTO {\n  /** @format date-time */\n  utcRecordTimestamp?: string | null;\n  /** @format int32 */\n  userId?: number | null;\n  userInfo?: string | null;\n  /** @format date-time */\n  utcRecordTimestampUpd?: string | null;\n  /** @format int32 */\n  userIdUpd?: number | null;\n  userInfoUpd?: string | null;\n  /** @format int32 */\n  id?: number;\n  /** @format int32 */\n  roleId?: number;\n  name?: string | null;\n  defaultPage?: string | null;\n}\n\nexport enum MessageType {\n  Value0 = 0,\n  Value1 = 1,\n  Value2 = 2,\n  Value3 = 3,\n  Value4 = 4,\n  Value5 = 5,\n  Value6 = 6,\n  Value7 = 7,\n  Value8 = 8,\n  Value9 = 9,\n  Value10 = 10,\n}\n\n/** @format int32 */\n\nexport interface Message {\n  type?: MessageType;\n  code?: string | null;\n  text?: string | null;\n  details?: string | null;\n  parameters?: Record<string, string>;\n  subMessages?: Message[] | null;\n}\n\nexport interface GetRolesOfUserQueryDTOCoreListResponse {\n  data?: GetRolesOfUserQueryDTO[] | null;\n  messages?: Message[] | null;\n}\n\nexport interface RecordParams {\n  /** @format int32 */\n  recordId: number;\n  currentStateCode?: string | null;\n}\n\nexport interface UserActionFormQuery {\n  actionCode?: string | null;\n  recordTypeCode?: string | null;\n  recordParams?: RecordParams[] | null;\n  extraParamsPageValues?: any;\n  extraParamsFormValues?: any;\n  /** @minLength 1 */\n  formCode: string;\n}\n\nexport interface GetUserActionFormQuery {\n  data?: UserActionFormQuery;\n}\n\nexport interface GetUserInformationQueryDTO {\n  /** @format date-time */\n  utcRecordTimestamp?: string | null;\n  /** @format int32 */\n  userId?: number | null;\n  userInfo?: string | null;\n  /** @format date-time */\n  utcRecordTimestampUpd?: string | null;\n  /** @format int32 */\n  userIdUpd?: number | null;\n  userInfoUpd?: string | null;\n  username?: string | null;\n  displayName?: string | null;\n  domainUserName?: string | null;\n  email?: string | null;\n  firstName?: string | null;\n  lastName?: string | null;\n  /** @format date-time */\n  added?: string;\n  roleNames?: string[] | null;\n  defaultPage?: string | null;\n  /** @format int32 */\n  languageId?: number | null;\n  /** @format int32 */\n  dateTimeFormatId?: number | null;\n  /** @format int32 */\n  decimalSeperatorId?: number | null;\n}\n\nexport interface GetUserInformationQueryDTOCoreResponse {\n  data?: GetUserInformationQueryDTO;\n  messages?: Message[] | null;\n}\n\nexport interface GetUsersQueryDTO {\n  /** @format date-time */\n  utcRecordTimestamp?: string | null;\n  /** @format int32 */\n  userId?: number | null;\n  userInfo?: string | null;\n  /** @format date-time */\n  utcRecordTimestampUpd?: string | null;\n  /** @format int32 */\n  userIdUpd?: number | null;\n  userInfoUpd?: string | null;\n  /** @format int32 */\n  id?: number;\n  username?: string | null;\n  displayName?: string | null;\n  email?: string | null;\n  isSystem?: boolean;\n  isLocked?: boolean;\n  /** @format date-time */\n  added?: string;\n  domain?: string | null;\n}\n\nexport interface GetUsersQueryDTOCoreListResponse {\n  data?: GetUsersQueryDTO[] | null;\n  messages?: Message[] | null;\n}\n\nexport interface LockUserCommandParametersDataFields {\n  /** @format int32 */\n  id: number;\n}\n\nexport interface LockUserCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: LockUserCommandParametersDataFields;\n}\n\nexport interface LockUserCommand {\n  data?: LockUserCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\nexport interface NewUserCommandParametersDataFields {\n  /** @minLength 1 */\n  username: string;\n  /** @minLength 1 */\n  password: string;\n}\n\nexport interface NewUserCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: NewUserCommandParametersDataFields;\n}\n\nexport interface NewUserCommand {\n  data?: NewUserCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\nexport interface RemoveRoleFromUserCommandParametersDataFields {\n  /** @format int32 */\n  id: number;\n}\n\nexport interface RemoveRoleFromUserCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: RemoveRoleFromUserCommandParametersDataFields;\n}\n\nexport interface RemoveRoleFromUserCommand {\n  data?: RemoveRoleFromUserCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\nexport interface SyncDomainUsersCommandParametersDataFields {\n  /** @minLength 1 */\n  username: string;\n  /** @minLength 1 */\n  password: string;\n  domain?: string | null;\n}\n\nexport interface SyncDomainUsersCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: SyncDomainUsersCommandParametersDataFields;\n}\n\nexport interface SyncDomainUsersCommand {\n  data?: SyncDomainUsersCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\nexport interface UnlockUserCommandParametersDataFields {\n  /** @format int32 */\n  id: number;\n}\n\nexport interface UnlockUserCommandParametersDataFieldsActionRequestExtraParam {\n  currentStateCode?: string | null;\n  /** @minLength 1 */\n  actionCode: string;\n  /** @minLength 1 */\n  recordTypeCode: string;\n  extraParamsFormValues?: UnlockUserCommandParametersDataFields;\n}\n\nexport interface UnlockUserCommand {\n  data?: UnlockUserCommandParametersDataFieldsActionRequestExtraParam;\n  eSign?: ESign;\n}\n\n\n// ===== Request DTOs =====\n// Auto-generated request DTOs for Users\n\nexport interface UsersUsersListQuery {\n  getUsersQuery?: object;\n}\n\nexport interface UsersUserInformationCreateQuery {\n  getUserInformationQuery?: object;\n}\n\nexport interface UsersUsersCreate2PathParams {\n  id: number;\n}\n\nexport interface UsersLockCreatePathParams {\n  id: number;\n}\n\nexport interface UsersUnlockCreatePathParams {\n  id: number;\n}\n\nexport interface UsersUserRolesListQuery {\n  Id?: number;\n}\n\nexport interface UsersUserRolesCreate2PathParams {\n  id: number;\n}\n\nexport interface UsersActionsListQuery {\n  RecordTypeCode?: string;\n  RecordId?: number;\n  CurrentStateCode?: string;\n  AllActions?: boolean;\n}\n\n\n\n// ===== Generated Types & Fields =====\n// Auto-generated from users.ts for grouped fields and types\n\nexport const GetRolesOfUserQueryDTOCoreListResponseFields = {\n  utcRecordTimestamp: {\n    _field: \"utcRecordTimestamp\",\n    _type: \"string\",\n    _caption: \"s:utcRecordTimestamp\",\n  },\n  userId: {\n    _field: \"userId\",\n    _type: \"number\",\n    _caption: \"s:userId\",\n  },\n  userInfo: {\n    _field: \"userInfo\",\n    _type: \"string\",\n    _caption: \"s:userInfo\",\n  },\n  utcRecordTimestampUpd: {\n    _field: \"utcRecordTimestampUpd\",\n    _type: \"string\",\n    _caption: \"s:utcRecordTimestampUpd\",\n  },\n  userIdUpd: {\n    _field: \"userIdUpd\",\n    _type: \"number\",\n    _caption: \"s:userIdUpd\",\n  },\n  userInfoUpd: {\n    _field: \"userInfoUpd\",\n    _type: \"string\",\n    _caption: \"s:userInfoUpd\",\n  },\n  id: {\n    _field: \"id\",\n    _type: \"number\",\n    _caption: \"s:id\",\n  },\n  roleId: {\n    _field: \"roleId\",\n    _type: \"number\",\n    _caption: \"s:roleId\",\n  },\n  name: {\n    _field: \"name\",\n    _type: \"string\",\n    _caption: \"s:name\",\n  },\n  defaultPage: {\n    _field: \"defaultPage\",\n    _type: \"string\",\n    _caption: \"s:defaultPage\",\n  },\n} as const;\n\nexport const GetUserInformationQueryDTOCoreResponseFields = {\n  utcRecordTimestamp: {\n    _field: \"utcRecordTimestamp\",\n    _type: \"string\",\n    _caption: \"s:utcRecordTimestamp\",\n  },\n  userId: {\n    _field: \"userId\",\n    _type: \"number\",\n    _caption: \"s:userId\",\n  },\n  userInfo: {\n    _field: \"userInfo\",\n    _type: \"string\",\n    _caption: \"s:userInfo\",\n  },\n  utcRecordTimestampUpd: {\n    _field: \"utcRecordTimestampUpd\",\n    _type: \"string\",\n    _caption: \"s:utcRecordTimestampUpd\",\n  },\n  userIdUpd: {\n    _field: \"userIdUpd\",\n    _type: \"number\",\n    _caption: \"s:userIdUpd\",\n  },\n  userInfoUpd: {\n    _field: \"userInfoUpd\",\n    _type: \"string\",\n    _caption: \"s:userInfoUpd\",\n  },\n  username: {\n    _field: \"username\",\n    _type: \"string\",\n    _caption: \"s:username\",\n  },\n  displayName: {\n    _field: \"displayName\",\n    _type: \"string\",\n    _caption: \"s:displayName\",\n  },\n  domainUserName: {\n    _field: \"domainUserName\",\n    _type: \"string\",\n    _caption: \"s:domainUserName\",\n  },\n  email: {\n    _field: \"email\",\n    _type: \"string\",\n    _caption: \"s:email\",\n  },\n  firstName: {\n    _field: \"firstName\",\n    _type: \"string\",\n    _caption: \"s:firstName\",\n  },\n  lastName: {\n    _field: \"lastName\",\n    _type: \"string\",\n    _caption: \"s:lastName\",\n  },\n  added: {\n    _field: \"added\",\n    _type: \"string\",\n    _caption: \"s:added\",\n  },\n  roleNames: {\n    _field: \"roleNames\",\n    _type: \"array\",\n    _caption: \"s:roleNames\",\n  },\n  defaultPage: {\n    _field: \"defaultPage\",\n    _type: \"string\",\n    _caption: \"s:defaultPage\",\n  },\n  languageId: {\n    _field: \"languageId\",\n    _type: \"number\",\n    _caption: \"s:languageId\",\n  },\n  dateTimeFormatId: {\n    _field: \"dateTimeFormatId\",\n    _type: \"number\",\n    _caption: \"s:dateTimeFormatId\",\n  },\n  decimalSeperatorId: {\n    _field: \"decimalSeperatorId\",\n    _type: \"number\",\n    _caption: \"s:decimalSeperatorId\",\n  },\n} as const;\n\nexport const GetUsersQueryDTOCoreListResponseFields = {\n  utcRecordTimestamp: {\n    _field: \"utcRecordTimestamp\",\n    _type: \"string\",\n    _caption: \"s:utcRecordTimestamp\",\n  },\n  userId: {\n    _field: \"userId\",\n    _type: \"number\",\n    _caption: \"s:userId\",\n  },\n  userInfo: {\n    _field: \"userInfo\",\n    _type: \"string\",\n    _caption: \"s:userInfo\",\n  },\n  utcRecordTimestampUpd: {\n    _field: \"utcRecordTimestampUpd\",\n    _type: \"string\",\n    _caption: \"s:utcRecordTimestampUpd\",\n  },\n  userIdUpd: {\n    _field: \"userIdUpd\",\n    _type: \"number\",\n    _caption: \"s:userIdUpd\",\n  },\n  userInfoUpd: {\n    _field: \"userInfoUpd\",\n    _type: \"string\",\n    _caption: \"s:userInfoUpd\",\n  },\n  id: {\n    _field: \"id\",\n    _type: \"number\",\n    _caption: \"s:id\",\n  },\n  username: {\n    _field: \"username\",\n    _type: \"string\",\n    _caption: \"s:username\",\n  },\n  displayName: {\n    _field: \"displayName\",\n    _type: \"string\",\n    _caption: \"s:displayName\",\n  },\n  email: {\n    _field: \"email\",\n    _type: \"string\",\n    _caption: \"s:email\",\n  },\n  isSystem: {\n    _field: \"isSystem\",\n    _type: \"boolean\",\n    _caption: \"s:isSystem\",\n  },\n  isLocked: {\n    _field: \"isLocked\",\n    _type: \"boolean\",\n    _caption: \"s:isLocked\",\n  },\n  added: {\n    _field: \"added\",\n    _type: \"string\",\n    _caption: \"s:added\",\n  },\n  domain: {\n    _field: \"domain\",\n    _type: \"string\",\n    _caption: \"s:domain\",\n  },\n} as const;\n\n","import { DataSource, QueryEntity, Entity } from 'utility';\r\nimport { GetRolesOfUserQueryDTOCoreListResponse, GetUsersQueryDTOCoreListResponse, UsersUserRolesListQuery } from '../users'\r\nimport { module } from '../module'\r\n\r\nconst userRoles = new Entity({\r\n    entityCode: \"USER_ROLES\",\r\n    module: module,\r\n    dataSource: new DataSource({\r\n        name: 'userRoles',\r\n        method: 'GET',\r\n        translatableResponseFields: [\"data.defaultPage\"]\r\n    }), \r\n});\r\n\r\nexport const UserEntity: QueryEntity<\r\n{},\r\nGetUsersQueryDTOCoreListResponse,\r\n{},\r\n{\r\n    userRoles:\r\n    QueryEntity<\r\n        UsersUserRolesListQuery,\r\n        GetRolesOfUserQueryDTOCoreListResponse\r\n    >\r\n}\r\n> = \r\nnew Entity({\r\n    dataSource: new DataSource({\r\n        name: 'users',\r\n        method: 'GET',\r\n    }),\r\n    entityCode: 'USERS',\r\n    module: module,\r\n    subEntities: {\r\n        userRoles: userRoles\r\n    }\r\n});\r\n\r\nexport default { UserEntity };","import { UserEntity } from \"../../entities/user.entity\";\r\nimport { UsersUserRolesListQuery } from \"../../users\";\r\nimport { useUserManagementStore } from \"./userManagement.store\";\r\n\r\nconst pageStore = useUserManagementStore();\r\nconst userEntity = UserEntity;\r\n\r\nuserEntity.subEntities.userRoles.dataSource.getQueryParams = (): UsersUserRolesListQuery => (\r\n    {\r\n      Id: pageStore.usersDataGridStore.GetDataGridView()?.selectedRowKeys?.[0] ?? undefined,\r\n    }\r\n); \r\n\r\nexport {\r\n    userEntity,\r\n}","import { GetUsersQueryDTOCoreListResponse, GetUsersQueryDTOCoreListResponseFields } from '../../../../users';\r\nimport { DataGridConfig } from 'shared-components'\r\n\r\nimport { userEntity } from '../../userManagement.entities';\r\nimport { USERS_DATA_GRID } from '../../componentIds';\r\nimport { VisualizationType } from 'utility';\r\n\r\nexport const userGridConfig: DataGridConfig<GetUsersQueryDTOCoreListResponse> = {\r\n  id: USERS_DATA_GRID,\r\n  title: \"s:users\",\r\n  entity: userEntity,\r\n  newFormTitle: \"s:addUser\",\r\n  columns: [\r\n    { \r\n      field: GetUsersQueryDTOCoreListResponseFields.id,\r\n      visible: false,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: true,\r\n      visibleInEditMode: false\r\n    },\r\n    { \r\n      field: GetUsersQueryDTOCoreListResponseFields.username,\r\n      visible: true,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: true,\r\n      visibleInEditMode: true\r\n    },\r\n    { \r\n      field: {_caption: \"s:password\", _field:\"password\", _type: \"string\"},\r\n      visible: false,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: true,\r\n      visibleInEditMode: true\r\n    },\r\n    { \r\n      field: GetUsersQueryDTOCoreListResponseFields.displayName,\r\n      visible: true,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: false,\r\n      visibleInEditMode: false\r\n    },\r\n    { \r\n      field: GetUsersQueryDTOCoreListResponseFields.email,\r\n      visible: true,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: false,\r\n      visibleInEditMode: false\r\n    },\r\n    { \r\n      field: GetUsersQueryDTOCoreListResponseFields.isSystem,\r\n      visible: true,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: false,\r\n      visibleInEditMode: false\r\n    },\r\n    { \r\n      field: GetUsersQueryDTOCoreListResponseFields.isLocked,\r\n      visible: true,\r\n      visualizationType: VisualizationType.Value11,\r\n      addedInEditMode: false,\r\n      visibleInEditMode: false\r\n    },\r\n    // { \r\n    //   field: GetUsersQueryDTOCoreListResponseFields.domain,\r\n    //   visible: true,\r\n    //   visualizationType: VisualizationType.Value11,\r\n    //   addedInEditMode: false,\r\n    //   visibleInEditMode: false\r\n    // }\r\n  ]\r\n};","<template>\r\n  <DataGrid\r\n    ref=\"dataGridRef\"\r\n    :config=\"userGridConfig\"\r\n    :can-delete=\"false\"\r\n    :can-update=\"false\"\r\n    @refresh=\"onRefresh\"\r\n    @selected=\"onUserSelected\"\r\n    @view-changed=\"onViewChanged\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { DataGrid, DataGridStore } from 'shared-components';\r\nimport { useUserManagementStore } from '../../userManagement.store';\r\nimport { USERS_DATA_GRID } from '../../componentIds';\r\nimport { userGridConfig } from './usersDataGrid.config'\r\nimport { ref } from 'vue';\r\n\r\nconst pageStore = useUserManagementStore();\r\nconst dataGridRef = ref();\r\n\r\nfunction onUserSelected(user: any) {\r\n  const id = user?.id ?? null;\r\n  let view = pageStore.usersDataGridStore.GetDataGridView();\r\n  view.selectedRowKeys = [id];\r\n  pageStore.usersDataGridStore.SaveDataGridView(view);\r\n  onRefresh();\r\n}\r\n\r\nfunction onRefresh() {\r\n  pageStore.triggerRefresh(USERS_DATA_GRID);\r\n}\r\n\r\nfunction onViewChanged(newState: DataGridStore) {\r\n  pageStore.usersDataGridStore.SaveDataGridView(newState);\r\n}\r\n</script>\r\n","<template>\n  <div style=\"width: 100%;\">\n    <UsersDataGrid/>\n    \n    <UserRolesDataGrid v-if=\"settingsService.activeModules.value.map(m => m.moduleName).includes('rolesManagement') && pageStore.usersDataGridStore.GetDataGridView()?.selectedRowKeys?.length\"/>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport UsersDataGrid from './components/UsersDataGrid/UsersDataGrid.vue';\nimport { useUserManagementStore } from './userManagement.store';\nimport { settingsService } from 'utility';\nimport { defineAsyncComponent } from 'vue';\n\nconst UserRolesDataGrid = defineAsyncComponent(() => \n  import('./components/UserRolesDataGrid/UserRolesDataGrid.vue')\n)\n\nconst pageStore = useUserManagementStore();\n</script>"],"file":"assets/UsersManagement-8d24ebc0.js"}